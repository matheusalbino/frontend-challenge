{"version":3,"sources":["layout/index.tsx","assets/img/metin2-logo.png","library/Modal.tsx","library/Button.tsx","library/Loading.tsx","library/CheckIcon.tsx","library/ProgressBar.tsx","pages/redeem/utils/useDelay.ts","pages/redeem/components/ListRewardItem.tsx","pages/redeem/components/ListRewardPlaceholder.tsx","pages/redeem/hooks/useReedemPage.tsx","pages/redeem/index.tsx","index.tsx","Config.ts"],"names":["Layout","props","children","className","Modal","Button","variant","type","buttonProps","clsx","Loading","xmlns","fill","viewBox","cx","cy","r","strokeWidth","d","CheckIcon","width","height","ProgressBar","percentage","target","delay","useState","value","setValue","useEffect","undefined","timeout","setTimeout","clearTimeout","useDelay","style","ListRewardItem","For","data","onClick","redeemed","isRedeemed","inProgress","src","image","alt","name","disabled","id","ListRewardPlaceholder","Repeat","rewardsRequest","Axios","get","then","res","redeemRequest","payload","post","JSON","stringify","item_id","rewardId","RedeemPage","selectedReward","setSelectedReward","useQuery","rewards","isLoadingRewards","isFetching","useMutation","onSuccess","success","prev","redeem","isLoadingRedeem","isLoading","useRedeemPage","Helmet","Metin2Logo","repeat","for","for-key","reward","for-redeemed","find","ReactDOM","render","config","queries","cacheTime","staleTime","retry","refetchOnWindowFocus","refetchOnReconnect","refetchOnMount","keepPreviousData","mutations","shared","suspense","document","getElementById"],"mappings":"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","file":"static/js/main.36263ec2.chunk.js","sourcesContent":["export const Layout: React.FC = (props) => {\n  const { children } = props;\n\n  return (\n    <div className=\"w-full h-full bg-metin2 overflow-y-auto\">\n      <div className=\"container grid grid-cols-12 gap-4 h-full\">{children}</div>\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/metin2-logo.efe18c5a.png\";","export const Modal: React.FC = (props) => {\n  const { children } = props;\n\n  return (\n    <div className=\"fixed inset-0 z-50 bg-black bg-opacity-50 grid grid-cols-12 gap-4 content-center\">\n      <div className=\"col-span-full md:col-start-4 md:col-end-10 lg:col-start-5 lg:col-end-9 p-4 border-b-2 border-primary-light bg-gray\">\n        {children}\n      </div>\n    </div>\n  );\n};\n","import clsx from 'clsx';\n\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  variant?: 'primary' | 'confirm' | 'cancel';\n}\n\nexport const Button: React.FC<ButtonProps> = (props) => {\n  const { className, variant = 'primary', type = 'button', children, ...buttonProps } = props;\n\n  return (\n    <button\n      type={type}\n      {...buttonProps}\n      className={clsx(\n        'rounded py-1',\n        {\n          'border text-sm uppercase px-2 font-medium': variant === 'primary',\n          'border-primary-light bg-primary-light bg-opacity-10 text-primary-light': variant === 'primary',\n          'disabled:bg-transparent disabled:border-white disabled:border-opacity-25 disabled:text-white disabled:text-opacity-50':\n            variant === 'primary',\n          'bg-primary-light px-4 text-white': variant === 'confirm',\n          'bg-white bg-opacity-25 px-4 text-white': variant === 'cancel',\n        },\n        className\n      )}\n    >\n      {children}\n    </button>\n  );\n};\n","import clsx from 'clsx';\n\ninterface LoadingProps {\n  className?: string;\n}\n\nexport const Loading: React.FC<LoadingProps> = (props) => {\n  const { className } = props;\n\n  return (\n    <svg\n      className={clsx('animate-spin text-white', className)}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n    >\n      <circle className=\"opacity-25 stroke-current\" cx=\"12\" cy=\"12\" r=\"10\" strokeWidth=\"4\" />\n      <path\n        className=\"opacity-75 fill-current\"\n        d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n      />\n    </svg>\n  );\n};\n","interface CheckIconsProps {\n  className?: string;\n}\n\nexport const CheckIcon: React.FC<CheckIconsProps> = (props) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" className={props.className}>\n    <path d=\"M20.285 2l-11.285 11.567-5.286-5.011-3.714 3.716 9 8.728 15-15.285z\" className=\"fill-current\" />\n  </svg>\n);\n","import clsx from 'clsx';\nimport { useDelay } from '../pages/redeem/utils/useDelay';\n\ninterface ProgressBarProps {\n  value: number;\n}\n\nexport const ProgressBar: React.FC<ProgressBarProps> = (props) => {\n  const { value } = props;\n\n  const percentage = useDelay(value);\n\n  return (\n    <div className=\"h-2 w-full border border-primary-medium\">\n      <div\n        className={clsx('h-full transition-all duration-1000 easy-in', {\n          'bg-primary-medium': percentage < 100,\n          'bg-primary-light': percentage === 100,\n        })}\n        style={{ width: `${percentage}%` }}\n      />\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\n\nexport function useDelay(target: string, delay?: number): string;\nexport function useDelay(target: number, delay?: number): number;\nexport function useDelay(target: string | number, delay = 300): string | number {\n  const [value, setValue] = useState(() => {\n    if (typeof target === 'number') return 0;\n\n    return '';\n  });\n\n  useEffect(() => {\n    if (value !== undefined) {\n      const timeout = setTimeout(() => {\n        setValue(target);\n      }, delay);\n\n      return () => clearTimeout(timeout);\n    }\n\n    return () => {};\n  }, [value, target, delay]);\n\n  return value;\n}\n","import { For } from '@equal/react-logic';\nimport clsx from 'clsx';\nimport { RewardResponse } from '../hooks/useReedemPage';\nimport { Button } from '../../../library/Button';\nimport { CheckIcon } from '../../../library/CheckIcon';\nimport { ProgressBar } from '../../../library/ProgressBar';\n\ninterface RewardProps {\n  data: RewardResponse;\n  redeemed: boolean;\n  onClick(rewardId: number): void;\n}\n\ninterface RewardExtraProps {\n  'for-redeemed'(reward: RewardResponse): boolean;\n  onClick: RewardProps['onClick'];\n}\n\nexport const ListRewardItem = For<RewardProps, RewardExtraProps>((props) => {\n  const { data, onClick, redeemed } = props;\n\n  const isRedeemed = data.redeemed || (redeemed ?? false);\n  const inProgress = !isRedeemed && data.percentage < 100;\n\n  return (\n    <li className=\"flex flex-col md:flex-row items-center space-y-4 md:space-x-4 md:space-y-0 py-4\">\n      <img src={data.image} alt={data.name} />\n      <div className=\"w-full\">\n        <div\n          className={clsx(\n            'flex flex-col md:flex-row items-center text-sm justify-between w-full space-y-4 md:space-y-0',\n            {\n              'mb-4 md:mb-2': !isRedeemed,\n            }\n          )}\n        >\n          <p>{data.name}</p>\n          {isRedeemed && (\n            <p className=\"flex items-center space-x-1 font-medium uppercase\">\n              <CheckIcon className=\"w-4 text-primary-light\" />\n              <span>Item Resgatado</span>\n            </p>\n          )}\n          {!isRedeemed && (\n            <Button disabled={inProgress} onClick={() => onClick(data.id)} className=\"w-full md:w-auto\">\n              Resgatar\n            </Button>\n          )}\n        </div>\n\n        {data.percentage <= 100 && !isRedeemed && <ProgressBar value={data.percentage} />}\n      </div>\n    </li>\n  );\n});\n","import { Repeat } from '@equal/react-logic';\n\nexport const ListRewardPlaceholder = Repeat(() => {\n  return (\n    <li className=\"flex flex-col md:flex-row items-center animate-pulse space-y-4 md:space-x-4 md:space-y-0 py-4\">\n      <div className=\"w-12 h-12 bg-primary-medium rounded\" />\n      <div className=\"w-full\">\n        <div className=\"flex items-center text-sm md:justify-between w-full flex-col md:flex-row space-y-4 md:space-y-0 px-8 md:px-0\">\n          <div className=\"w-full h-4 bg-primary-medium rounded\" />\n        </div>\n      </div>\n    </li>\n  );\n});\n","import Axios from 'axios';\nimport { useState } from 'react';\nimport { useQuery, useMutation, MutateFunction } from 'react-query';\n\ninterface RedeemRequest {\n  rewardId: number;\n}\n\ninterface RedeemResponse {\n  success: boolean;\n}\n\nexport interface RewardResponse {\n  id: number;\n  image: string;\n  name: string;\n  percentage: number;\n  redeemed: boolean;\n}\n\ntype RewardsResponse = RewardResponse[];\n\ninterface RedeemPageHook {\n  rewards: RewardsResponse | undefined;\n  isLoadingRewards: boolean;\n  redeem: MutateFunction<RedeemResponse, unknown, RedeemRequest, unknown>;\n  isLoadingRedeem: boolean;\n  selectedReward: RewardResponse | undefined;\n  setSelectedReward: React.Dispatch<React.SetStateAction<RewardResponse | undefined>>;\n}\n\nexport function useRedeemPage(): RedeemPageHook {\n  const [selectedReward, setSelectedReward] = useState<RewardResponse | undefined>(undefined);\n\n  const { data: rewards, isFetching: isLoadingRewards } = useQuery<RewardsResponse>(['rewards'], rewardsRequest);\n\n  const [redeem, { isLoading: isLoadingRedeem }] = useMutation<RedeemResponse, {}, RedeemRequest, {}>(redeemRequest, {\n    onSuccess(data) {\n      if (data.success) {\n        setSelectedReward((prev) => {\n          if (prev !== undefined) {\n            return { ...prev, redeemed: true };\n          }\n\n          return undefined;\n        });\n      }\n    },\n  });\n\n  return {\n    rewards,\n    isLoadingRewards,\n    redeem,\n    isLoadingRedeem,\n    selectedReward,\n    setSelectedReward,\n  };\n}\n\nfunction rewardsRequest(): Promise<RewardsResponse> {\n  return Axios.get('https://br.ongame.net/api/challenge/items/').then((res) => res.data);\n}\n\nfunction redeemRequest(payload: RedeemRequest): Promise<RedeemResponse> {\n  return Axios.post(\n    'https://br.ongame.net/api/challenge/item/redeem/',\n    JSON.stringify({\n      item_id: payload.rewardId,\n    })\n  ).then((res) => res.data);\n}\n","import { Helmet } from 'react-helmet';\nimport { Layout } from '../../layout';\nimport Metin2Logo from '../../assets/img/metin2-logo.png';\nimport { Modal } from '../../library/Modal';\nimport { Button } from '../../library/Button';\nimport { Loading } from '../../library/Loading';\nimport { ListRewardItem } from './components/ListRewardItem';\nimport { ListRewardPlaceholder } from './components/ListRewardPlaceholder';\nimport { useRedeemPage } from './hooks/useReedemPage';\n\nexport const RedeemPage: React.FC = () => {\n  const { isLoadingRewards, rewards, selectedReward, setSelectedReward, redeem, isLoadingRedeem } = useRedeemPage();\n\n  return (\n    <Layout>\n      <Helmet>\n        <title>Metin 2 - Resgate sua premiação</title>\n      </Helmet>\n      <div className=\"col-span-full sm:col-start-2 sm:col-end-12 lg:col-start-4 lg:col-end-10 md:flex md:items-center h-full mt-12 md:mt-0\">\n        <div className=\"w-full border-2 border-black bg-black bg-opacity-25 text-white p-5 space-y-5\">\n          <img src={Metin2Logo} alt=\"Metin 2 Logo\" className=\"mx-auto w-2/3 md:w-1/3\" />\n\n          <p className=\"text-center font-medium text-xl md:text-2xl text-shadow-primary-light\">\n            Resgate sua premiação!\n          </p>\n\n          <ul className=\"divide-y divide-primary-medium\">\n            {isLoadingRewards && <ListRewardPlaceholder repeat={6} />}\n            {rewards !== undefined && (\n              <ListRewardItem\n                for={rewards}\n                for-key={(reward) => reward.id}\n                for-redeemed={(reward) => (selectedReward?.id === reward.id && selectedReward?.redeemed) ?? false}\n                onClick={(rewardId) => {\n                  setSelectedReward(rewards.find((reward) => reward.id === rewardId));\n                }}\n              />\n            )}\n          </ul>\n        </div>\n      </div>\n\n      {selectedReward?.redeemed === false && (\n        <Modal>\n          {isLoadingRedeem && (\n            <div className=\"text-center space-y-6\">\n              <p className=\"uppercase font-medium text-3xl text-primary-light\">Resgatando</p>\n\n              <Loading className=\"mx-auto w-12\" />\n            </div>\n          )}\n          {!isLoadingRedeem && (\n            <div className=\"text-center space-y-6\">\n              <p className=\"uppercase font-medium text-3xl text-primary-light\">Deseja Resgatar?</p>\n\n              <div className=\"space-y-4\">\n                <img src={selectedReward.image} alt={selectedReward.name} className=\"mx-auto\" />\n\n                <p className=\"text-white\">{selectedReward.name}</p>\n              </div>\n\n              <div className=\"space-x-4\">\n                <Button variant=\"confirm\" onClick={() => redeem({ rewardId: selectedReward.id })}>\n                  Sim\n                </Button>\n                <Button variant=\"cancel\" onClick={() => setSelectedReward(undefined)}>\n                  Não\n                </Button>\n              </div>\n            </div>\n          )}\n        </Modal>\n      )}\n    </Layout>\n  );\n};\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport { ReactQueryConfigProvider } from 'react-query';\nimport './assets/css/main.css';\nimport { reactQueryConfig } from './Config';\nimport { RedeemPage } from './pages/redeem';\n\nReactDOM.render(\n  <StrictMode>\n    <ReactQueryConfigProvider config={reactQueryConfig}>\n      <RedeemPage />\n    </ReactQueryConfigProvider>\n  </StrictMode>,\n  document.getElementById('root')\n);\n","import { ReactQueryConfig } from 'react-query';\n\nexport const reactQueryConfig: ReactQueryConfig = {\n  queries: {\n    cacheTime: 0,\n    staleTime: 0,\n    retry: false,\n    refetchOnWindowFocus: false,\n    refetchOnReconnect: false,\n    refetchOnMount: true,\n    keepPreviousData: false,\n  },\n  mutations: {},\n  shared: {\n    suspense: false,\n  },\n};\n"],"sourceRoot":""}